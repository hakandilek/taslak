<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"
       default-lazy-init="true">

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <!-- Mesken Beans -->
                <value>org.xmdl.mesken.model.User</value>
                <value>org.xmdl.mesken.model.Role</value>
                <!-- Application beans -->
                <value>org.xmdl.taslak.model.Product</value>
				<value>org.xmdl.taslak.model.Order</value>
				<value>org.xmdl.taslak.model.OrderElement</value>
				<value>org.xmdl.taslak.model.Supplier</value>
				<value>org.xmdl.taslak.model.Profile</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.query.substitutions=true 'Y', false 'N'
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- UniversalDao - can be used when doing standard CRUD - made available 
        for those who don't mind casting.  If you don't want to cast, look at 
        'fooDao' below. -->
    <bean id="universalDao" class="org.xmdl.ida.lib.dao.hibernate.UniversalDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="lookupDao" class="org.xmdl.mesken.dao.hibernate.LookupDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="productDao" class="org.xmdl.taslak.dao.hibernate.ProductDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="orderDao" class="org.xmdl.taslak.dao.hibernate.OrderDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="orderElementDao" class="org.xmdl.taslak.dao.hibernate.OrderElementDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="supplierDao" class="org.xmdl.taslak.dao.hibernate.SupplierDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="profileDao" class="org.xmdl.taslak.dao.hibernate.ProfileDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

</beans>
